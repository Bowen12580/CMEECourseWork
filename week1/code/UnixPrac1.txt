# make sure now we are in the directory 'week1/code'

# Question: Is the above show the path properly(by declaring in the directory 'data')? or use #../data as a comment to be the path?

#1  
   #it is suitable to use the command 'wc -l your_file.fasta' there is an example below for the first fasta file
  
	cat ../data/407228326.fasta | wc -l && cat ../data/407228412.fasta | wc -l && cat ../data/E.coli.fasta | wc -l

   
  
#2
   # first method (this is the real answer)
	tail -n +2 ../data/E.coli.fasta
  

#3 
   # Count the length of genome E.coli
	tail -n +2 ../data/E.coli.fasta | tr -d '\n' | wc -c
  
#4 
   # Count the matches of a particular sequence, “ATGC” in the genome of E. coli	
 	tail -n +2 ../data/E.coli.fasta | tr -d '\n' | grep -o 'ATGC' | wc -l
 	
#5
	A=$(tail -n +2 ../data/E.coli.fasta | grep -o 'A' | wc -l)
	T=$(tail -n +2 ../data/E.coli.fasta | grep -o 'T' | wc -l)
	G=$(tail -n +2 ../data/E.coli.fasta | grep -o 'G' | wc -l)
	C=$(tail -n +2 ../data/E.coli.fasta | grep -o 'C' | wc -l)
	echo "scale=4; ($A+$T)/($G+$C)" | bc
	
   #Conclusion (as a note) : echo must use " " rather than ' ' .
                            #grep -v will output the file name , but 'tail' will not.
